@model DelightFoods_Live.Models.DTO.CartDTO
@{
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}

@Html.HiddenFor(model => model.IsOrderCreated, new { id = "isOrderCreated" })

<!-- Single Page Header start -->
<div class="container-fluid page-header py-5">
    <h1 class="text-center text-white display-6">Cart</h1>
    <ol class="breadcrumb justify-content-center mb-0">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Pages</a></li>
        <li class="breadcrumb-item active text-white">Cart</li>
    </ol>
</div>
<!-- Single Page Header End -->
<!-- Cart Page Start -->
<div class="container-fluid py-5">
    <div class="container py-5">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Products</th>
                        <th scope="col">Name</th>
                        <th scope="col">Price</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Total</th>
                        <th scope="col">Handle</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.CartDTOlist)
                    {
                        <tr>
                            <th scope="row">
                                <div class="d-flex align-items-center">
                                    <img src="@item.MediaFilePath" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="">
                                </div>
                            </th>
                            <td>
                                <p class="mb-0 mt-4">@item.ProductName</p>
                            </td>
                            <td>
                                <p class="mb-0 mt-4">@item.ProductPrice $</p>
                            </td>
                            <td>
                                <div class="input-group quantity mt-4" style="width: 100px;">
                                    <div class="input-group-btn">
                                        <button class="btn btn-sm btn-minus rounded-circle bg-light border" data-id="@item.Id">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                    <input type="text" class="form-control form-control-sm text-center border-0" value="@item.Quantity">
                                    <div class="input-group-btn">
                                        <button class="btn btn-sm btn-plus rounded-circle bg-light border" data-id="@item.Id">
                                            <i class="fa fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <p class="mb-0 mt-4">@item.TotalPrice $</p>
                            </td>
                            <td>
                                <button class="btn btn-md rounded-circle bg-light border mt-4 clearAllItem" data-id="@item.Id">
                                    <i class="fa fa-times text-danger"></i>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="row g-4 justify-content-end">

            <div class="col-sm-10 col-md-8 col-lg-6 col-xl-5  paymentdiv">
                <div class="bg-light rounded">
                    <div class="p-4">
                        <h1 class="display-6 mb-4"> Payment </h1>
                        <div class="d-flex justify-content-between mb-4">

                            <div class="col-md-4">
                                <h5 class="mb-0 me-4">Card Number:</h5>
                            </div>
                            <div class="col-md-8">
                                @* @Html.TextBoxFor(model => model.CardNumber,  new { @class = "form-control" }) *@
                                <input type="number" id="txtCardNumber" class="form-control" />
                            </div>

                        </div>
                        <div class="d-flex justify-content-between  mb-4">

                            <div class="col-md-4">
                                <h5 class="mb-0 me-4">Expiry</h5>
                            </div>
                            <div class="col-md-8">
                                <input type="text" id="txtExpiry" class="form-control" />

                            </div>

                        </div>
                        <div class="d-flex justify-content-between  mb-4">

                            <div class="col-md-4">
                                <h5 class="mb-0 me-4">CVC</h5>
                            </div>
                            <div class="col-md-8">
                                <input type="number" id="txtCVC" class="form-control" />

                            </div>

                        </div>
                    </div>
                    <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                        <h5 class="mb-0 ps-4 me-4">Total</h5>
                        <p class="mb-0 pe-4">$ @Model.CartDTOlist.Sum(x => x.TotalPrice)</p>
                    </div>
                    <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" id="paymentbtn" type="button">Payment Proceed</button>
                </div>
            </div>


            <div class="col-2"></div>



            <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4 ">
                <div class="bg-light rounded">
                    <div class="p-4">
                        <h1 class="display-6 mb-4"> Cart <span class="fw-normal">Total</span></h1>
                        <div class="d-flex justify-content-between mb-4">
                            <h5 class="mb-0 me-4">Subtotal:</h5>
                            <p class="mb-0">$ @Model.CartDTOlist.Sum(x => x.TotalPrice)</p>
                        </div>
                        <div class="d-flex justify-content-between">
                            <h5 class="mb-0 me-4">Shipping</h5>
                            <div class="">
                                @* <p class="mb-0">Flat rate: $3.00</p> *@
                            </div>
                        </div>
                        @* <p class="mb-0 text-end">Shipping to Ukraine.</p> *@
                    </div>
                    <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                        <h5 class="mb-0 ps-4 me-4">Total</h5>
                        <p class="mb-0 pe-4">$ @Model.CartDTOlist.Sum(x => x.TotalPrice)</p>
                    </div>
                    <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" id="checkoutbtn" type="button">Proceed Checkout</button>
                </div>
            </div>

        </div>
    </div>

    <script>

        $(document).ready(function () {
            var isOrderCreated = $("#isOrderCreated").val();

            if (isOrderCreated === "True") {
                $(".paymentdiv").show();
                $("#checkoutbtn").hide();
            } else {
                $(".paymentdiv").hide();
            }
        });

        $(".clearAllItem").on("click", function () {
            var Id = $(this).data("id");
            console.log('productId =', Id)

            $.ajax({
                type: 'POST',
                url: "@Url.Action("RemoveAllItemFromCart", "Cart")",
                data: { id: Id },
                success: function (result) {
                    {
                        if (result == "succes") {
                            alert("Succesfully add in cart")
                            location.reload();
                        }
                        else {
                            alert("Error")
                        }
                    }
                },
                error: function (result) {
                    //Toast.create({ title: "Error", message: "Error", status: TOAST_STATUS.DANGER, timeout: 3000 });
                }
            });
        });

        $(".btn-minus").on("click", function () {
            var Id = $(this).data("id");
            console.log('productId =', Id)

            $.ajax({
                type: 'POST',
                url: "@Url.Action("RemoveItemFromCart", "Cart")",
                data: { id: Id },
                success: function (result) {
                    {
                        if (result == "succes") {
                            alert("Succesfully add in cart")
                            location.reload();
                        }
                        else {
                            alert("Error")
                        }
                    }
                },
                error: function (result) {
                    //Toast.create({ title: "Error", message: "Error", status: TOAST_STATUS.DANGER, timeout: 3000 });
                }
            });
        });

        $(".btn-plus").on("click", function () {
            var Id = $(this).data("id");
            console.log('productId =', Id)

            $.ajax({
                type: 'POST',
                url: "@Url.Action("AddItemFromCart", "Cart")",
                data: { id: Id },
                success: function (result) {
                    {
                        if (result == "succes") {
                            alert("Succesfully add in cart")
                            location.reload();
                        }
                        else {
                            alert("Error")
                        }
                    }
                },
                error: function (result) {
                    //Toast.create({ title: "Error", message: "Error", status: TOAST_STATUS.DANGER, timeout: 3000 });
                }
            });
        });

        $("#checkoutbtn").on("click", function () {
            var Records = @Html.Raw(Json.Serialize(@Model.CartDTOlist));
            console.log("Records", Records)

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateOrderByCart", "SaleOrder")',
                data: { model: Records }, // No need to stringify
                success: function (result) {
                    if (result === "success") {
                        alert("Successfully added to cart");
                        location.reload();
                    } else {
                        alert("Error");
                    }
                },
                error: function (result) {
                    // Toast.create({ title: "Error", message: "Error", status: TOAST_STATUS.DANGER, timeout: 3000 });
                }
            });
        });


        $("#paymentbtn").on("click", function () {
            // Get the value of the textbox
            var cardNumber = $("#txtCardNumber").val();
            var expiry = $("#txtExpiry").val();
            var cvc = $("#txtCVC").val();

            // Update the model with the textbox value
            var model = @Html.Raw(Json.Serialize(Model));
            model.cardNumber = cardNumber;
            model.expiry = expiry;
            model.cvc = cvc;

            console.log("Model", model);

            $.ajax({
                type: 'POST',
                url: '@Url.Action("CartProductPayment", "SaleOrder")',
                data: { model: model },
                success: function (result) {
                    if (result === "success") {
                        alert("Successfully added to cart");
                        location.reload();
                    } else {
                        alert("Error");
                    }
                },
                error: function (result) {
                    // Handle error
                }
            });
        });



        // $("#paymentbtn").on("click", function () {
        //     var Records = @Html.Raw(Json.Serialize(@Model));
        //     console.log("Records", Records)

        //     $.ajax({
        //         type: 'POST',
        //         url: '@Url.Action("CartProductPayment", "SaleOrder")',
        //         data: { model: Records }, // No need to stringify
        //         success: function (result) {
        //             if (result === "success") {
        //                 alert("Successfully added to cart");
        //                 location.reload();
        //             } else {
        //                 alert("Error");
        //             }
        //         },
        //         error: function (result) {
        //             //Toast.create({ title: "Error", message: "Error", status: TOAST_STATUS.DANGER, timeout: 3000 });
        //         }
        //     });
        // });

    </script>

</div>

